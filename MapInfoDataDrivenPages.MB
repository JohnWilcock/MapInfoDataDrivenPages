'/*****************************************************************************
'*		Mapinfo data Driven Pages
'*      Author JWilcock 2014
'*      v1.0
'*****************************************************************************




'****************************************************************************
' Include files and Define statements
'****************************************************************************
Include "C:\Program Files (x86)\MapInfo\MapBasic\MAPBASIC.DEF"
Include "C:\Program Files (x86)\MapInfo\MAPBASIC\menu.def"  
Include "C:\Program Files (x86)\MapInfo\MAPBASIC\icons.def" 
Include "C:\Program Files (x86)\MapInfo\MAPBASIC\auto_lib.def" 
'****************************************************************************


'****************************************************************************
' .NET Functions
'****************************************************************************
Declare Method ShowDlg Class "MapInfoDataDrivenPages.Controller" Lib "MapInfoDataDrivenPages.dll" (ByVal hwnd as Integer) As Logical
Declare Method CloseDlg Class "MapInfoDataDrivenPages.Controller" Lib "MapInfoDataDrivenPages.dll" () As Logical
Declare Method showAbout Class "MapInfoDataDrivenPages.Controller" Lib "MapInfoDataDrivenPages.dll" () As integer


'****************************************************************************
' Declare sub procedures
'****************************************************************************
Declare Sub Main
declare sub about
Declare Sub EndHandler 
Declare Sub loader
Declare Sub SelChangedHandler 


' Handlers for dialog controls: 
Declare Sub bye 

declare function RegisterTool lib "tooltabl.dll" (
	byval title as string,
	byval description as string,
	byval location as string,
	byval owner as string,
byval autoload as integer) as integer
declare function UnregisterAllByOwner lib "tooltabl.dll" (byval owner as string) as integer

'****************************************************************************
' Declare global variables. 
'****************************************************************************
Global window_id As Integer   ' Window ID of current (map) window 
Global PI as float 
'Global tempString as string 'used in .net
Global mainFrame as object
Global OverviewOutline as pen

   
Sub Main
	PI = 3.14159265359
	
	OverviewOutline = MakePen(1, 2, 16711680)
	
  OnError Goto HandleError


'check if file exists 
if FileExists(GetFolderPath$(-3) + "\" + "DDP.tab") then
	'do nothing
else


	dim regTool as integer
	dim thePath as string  
	thePath = ApplicationDirectory$( ) + "MapInfoDataDrivenPages.mbx"
	'regTool = RegisterTool("DDP", "DDP implementation based on ArcGIS UI",thePath,"JWilcock",1)
end if


 call loader
     'Show 

'add menu to tools
	Create Menu "MapInfoDataDrivenPages" as
		"Show &Tool" Calling loader,
		"(-",
		"Help and About" calling About,
		"E&xit" calling bye

  	Alter Menu "Tools" Add "MapInfoDataDrivenPages" As "MapInfoDataDrivenPages"


	
  Exit Sub
  HandleError:
    Note "Main: " + Error$()
    Resume Next
End Sub

sub about
	dim ret as integer
	ret = showAbout()
end sub
'****************************************************************************
' 
'
' 
' 
'****************************************************************************
Sub loader 
  OnError Goto HandleError
  'If NumWindows() < 1 Then 
  '  Note GetResItemStr("ERR_NO_WIN_OPEN") 
  '  Exit Sub 
  'End If 

  'window_id = FrontWindow()
    
 ' If WindowInfo(window_id, WIN_INFO_TYPE ) <> WIN_MAPPER Then 
  '  Note GetResItemStr("ERR_FRONT_WIN_NOT_MAPPER") 
  '  Exit Sub 
  'End If  
   
  ' Display a dialog 
 
  Dim ret As Logical
  Dim hwndPro as Integer
  hwndPro = SystemInfo(SYS_INFO_MAPINFOWND)
  ret = ShowDlg(hwndPro)
  If Not ret Then
 
  End If
  Exit Sub
  HandleError:
    Note "ProfileTool: " + Error$()
    Resume Next
End Sub



'*****************************************************************
' If user chooses Close menu item, shut down. 
Sub bye 
  OnError Goto HandleError
  End Program
  HandleError:
    Note "bye: " + Error$()
    Resume Next 
End Sub 

Sub  EndHandler
  OnError Goto HandleError
  Dim ret as Logical
  ret = CloseDlg()
  Exit Sub
  HandleError:
    Note "EndHandler: " + Error$()
    Resume Next
end sub


' ////////////////////// end 

'dont need to check for deletion as table does not pack untill workspace saves 
Sub SelChangedHandler
 	
	'print CommandInfo( CMD_INFO_ROWID)
End Sub 


